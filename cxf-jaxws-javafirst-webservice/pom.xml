<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>br.usp.sin5009</groupId>
  <artifactId>cxf-jaxws-javafirst-webservice</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>cxfJavaFirstSOAPWebService</name>


  <description>Examplo de Java-first SOAP webservice usando CXF e spring project using Spring configuration</description>

  
  <properties>
    <test.server.port>9999</test.server.port>
    <cxf.version>3.3.4</cxf.version>
  </properties>

  <dependencies>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxws</artifactId>
            <version>3.3.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
            <version>3.3.4</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>5.1.10.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>5.1.10.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <source>1.8</source>
                <target>1.8</target>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-eclipse-plugin</artifactId>
              <configuration>
                <projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
                <wtpmanifest>true</wtpmanifest>
                <wtpapplicationxml>true</wtpapplicationxml>
                <wtpversion>2.0</wtpversion>
              </configuration>
            </plugin>            
              <plugin>
	      <!-- Deploy to Tomcat using: mvn clean package antrun:run Follow the 
		   instructions in build.properties.example to make it work! -->
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-antrun-plugin</artifactId>
	      <executions>
		<execution>
		  <id>undeployOnCleanPhase</id>
		  <phase>clean</phase>
		  <goals>
		    <goal>run</goal>
		  </goals>
		  <configuration>
		    <tasks>
		      <ant antfile="${basedir}/build.xml">
			<target name="undeploy.war.from.tomcat" />
		      </ant>
		    </tasks>
		  </configuration>
		</execution>
	      </executions>
	      <configuration>
		<tasks>
		  <ant antfile="${basedir}/build.xml">
		    <target name="copy.war.into.tomcat" />
		  </ant>
		</tasks>
	      </configuration>
	    </plugin>
                <plugin>
                    <!-- mvn clean install tomcat:run-war to deploy
                    Look for "Running war on http://xxx" and
                    "Setting the server's publish address to be /yyy"
                    in console output; WSDL browser address will be
                    concatenation of the two: http://xxx/yyy?wsdl
                    -->
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.0</version>
                    <executions>
                        <execution>
                            <id>start-tomcat</id>
                            <goals>
                                <goal>run-war</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <port>${test.server.port}</port>
                                <path>/webservice</path>
                                <fork>true</fork>
                                <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
          </plugins>
        </pluginManagement>
    </build>
</project>
